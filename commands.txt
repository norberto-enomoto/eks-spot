-> Criar o IAM user e IAM role
-> aws configure

-> Create cluster
eksctl create cluster -f eksworkshop-cluster.yaml
kubectl get node

-> Install Helm
curl -sSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
helm version --short

-> Install metric server
https://docs.aws.amazon.com/eks/latest/userguide/metrics-server.html
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
kubectl get deployment metrics-server -n kube-system

-----------------------------

-> Install Kube Ops View
https://artifacthub.io/packages/helm/k8s-at-home/kube-ops-view
helm repo add k8s-at-home https://k8s-at-home.com/charts/
helm repo update
helm install kube-ops-view k8s-at-home/kube-ops-view

export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=kube-ops-view,app.kubernetes.io/instance=kube-ops-view" -o jsonpath="{.items[0].metadata.name}")
kubectl port-forward $POD_NAME 8080:8080
http://127.0.0.1:8080

-----------------------------


-> Adding spot workers with EKSCTL
eksctl create nodegroup -f spot-nodegroups.yaml
kubectl get nodes
kubectl get nodes --show-labels --selector=lifecycle=Ec2Spot | grep Ec2Spot
kubectl get nodes --show-labels --selector=lifecycle=OnDemand | grep OnDemand


-> Deploy the node termination handler
https://artifacthub.io/packages/helm/aws/aws-node-termination-handler
helm repo add eks https://aws.github.io/eks-charts/
helm upgrade --install --namespace kube-system aws-node-termination-handler eks/aws-node-termination-handler


-> Deploying the application
kubectl apply -f monte-carlo-pi-service.yml

kubectl get svc monte-carlo-pi-service | tail -n 1 | awk '{ print "monte-carlo-pi-service URL = http://"$4 }'

-> Configure Cluster Autoscaler

https://docs.aws.amazon.com/pt_br/eks/latest/userguide/autoscaling.html
kubectl apply -f cluster-autoscaler.yml
kubectl logs -f deployment/cluster-autoscaler -n kube-system --tail=10

kubectl scale deployment/monte-carlo-pi-service --replicas=0
kubectl scale deployment/monte-carlo-pi-service --replicas=3
kubectl get pod --watch

-> Create an HPA resource associated with the Monte Carlo Pi Service
kubectl autoscale deployment monte-carlo-pi-service --cpu-percent=50 --min=3 --max=100
kubectl get hpa --watch

pip3 install -r requimerements.txt

URL=$(kubectl get svc monte-carlo-pi-service | tail -n 1 | awk '{ print $4 }')
python3 submit_mc_pi_k8s_requests.py -p 100 -r 30 -i 30000000 -u "http://${URL}"
time python3 submit_mc_pi_k8s_requests.py -p 100 -r 30 -i 30000000 -u "http://${URL}"

-> Excluir o cluster
eksctl delete nodegroup -f spot-nodegroups.yaml --approve
eksctl delete cluster -f eksworkshop-cluster.yaml

Kube Ops View
http://a6bd73632660844e59a635e2278d6830-1878987196.us-east-2.elb.amazonaws.com

Access Key Id: AKIA5NV46L642LZVHRJ5
Secret Access Key: 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
Password: i@om$[%#A-EC{DP

Hello,

You now have access to the AWS Management Console for the account ending in 1977. ------

Sign-in URL: https://922740481977.signin.aws.amazon.com/console
User name: eks-poc

Your password will be provided separately by your AWS account administrator. During your first sign-in, you must change your password.

------

Stay connected with AWS by creating a profile: https://pages.awscloud.com/IAM-communication-preferences.html










